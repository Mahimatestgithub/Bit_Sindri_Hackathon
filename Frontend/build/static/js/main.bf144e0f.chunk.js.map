{"version":3,"sources":["components/Camera.js","components/Settings.js","App.js","index.js"],"names":["Camera","videoRef","useRef","quality","setQuality","useState","isCameraOn","setIsCameraOn","processVideo","stream","canvas","document","createElement","context","getContext","interval","setInterval","drawImage","current","width","height","toBlob","async","imageData","FormData","append","blob","response","fetch","method","body","headers","data","json","imgBase64","frame","qualityText","text","error","console","checkFoodQuality","clearInterval","_jsxs","children","_jsx","ref","onClick","startCamera","navigator","mediaDevices","getUserMedia","video","then","srcObject","play","catch","stopCamera","getTracks","forEach","track","stop","Settings","className","value","type","min","max","defaultValue","alert","App","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"qKAgFeA,MA9EAA,KACX,MAAMC,EAAWC,iBAAO,OACjBC,EAASC,GAAcC,mBAAS,yBAChCC,EAAYC,GAAiBF,oBAAS,GAmCvCG,EAAgBC,IAClB,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAUH,EAAOI,WAAW,MAC5BC,EAAWC,aAAY,KACrBV,GACAO,EAAQI,UAAUhB,EAASiB,QAAS,EAAG,EAAGR,EAAOS,MAAOT,EAAOU,QAC/DV,EAAOW,QAAOC,UACV,MAAMC,EAAY,IAAIC,SACtBD,EAAUE,OAAO,QAASC,QAzCjBJ,WACrB,IACI,MAAMK,QAAiBC,MAAM,sCAAuC,CAChEC,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CACL,eAAgB,8BAGlBC,QAAaL,EAASM,OACtBC,EAAYF,EAAKG,MACjBC,EAAcJ,EAAKK,KAEzB,OADAjC,EAAWgC,GACJF,CACX,CAAE,MAAOI,GACLC,QAAQD,MAAM,mCAAoCA,GAClDlC,EAAW,QACf,GAyBkBoC,CAAiBjB,EAAU,GAClC,eAEHkB,cAAc1B,EAClB,GACD,IAAO,GAAG,EAajB,OACI2B,eAAA,OAAAC,SAAA,CACIC,cAAA,MAAAD,SAAI,wCACJC,cAAA,SAAOC,IAAK5C,EAAUkB,MAAM,MAAMC,OAAO,QACzCsB,eAAA,OAAAC,SAAA,CACIC,cAAA,UAAQE,QA7CAC,KAChBC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,IACxCC,MAAM3C,IACHR,EAASiB,QAAQmC,UAAY5C,EAC7BR,EAASiB,QAAQoC,OACjB/C,GAAc,GACdC,EAAaC,EAAO,IAEvB8C,OAAOjB,IACJC,QAAQD,MAAM,8BAA+BA,EAAM,GACrD,EAmC+BK,SAAC,iBAC9BC,cAAA,UAAQE,QAhBDU,KACfjD,GAAc,GACd,MAAME,EAASR,EAASiB,QAAQmC,UAChC,GAAI5C,EAAQ,CACOA,EAAOgD,YACfC,SAAQC,GAASA,EAAMC,QAClC,CACA3D,EAASiB,QAAQmC,UAAY,IAAI,EASGV,SAAC,mBAEjCD,eAAA,KAAAC,SAAA,CAAG,iBAAexC,OAChB,ECnDC0D,MAvBEA,IAETnB,eAAA,OAAKoB,UAAU,WAAUnB,SAAA,CACrBC,cAAA,MAAAD,SAAI,aACJD,eAAA,SAAAC,SAAA,CAAO,qBAEHD,eAAA,UAAAC,SAAA,CACIC,cAAA,UAAQmB,MAAM,UAASpB,SAAC,YACxBC,cAAA,UAAQmB,MAAM,WAAUpB,SAAC,aACzBC,cAAA,UAAQmB,MAAM,YAAWpB,SAAC,oBAGlCC,cAAA,SACAF,eAAA,SAAAC,SAAA,CAAO,qBAEHC,cAAA,SAAOoB,KAAK,SAASC,IAAI,IAAIC,IAAI,MAAMC,aAAa,UAExDvB,cAAA,SACAA,cAAA,UAAQE,QAASA,IAAMsB,MAAM,mBAAmBzB,SAAC,qB,KCL9C0B,MAVf,WACI,OACI3B,eAAA,OAAKoB,UAAU,MAAKnB,SAAA,CAChBC,cAAA,MAAAD,SAAI,wCACJC,cAACiB,EAAQ,IACTjB,cAAC5C,EAAM,MAGnB,ECRAsE,IAASC,OACP3B,cAAC4B,IAAMC,WAAU,CAAA9B,SACfC,cAACyB,EAAG,MAEN1D,SAAS+D,eAAe,Q","file":"static/js/main.bf144e0f.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Camera = () => {\n    const videoRef = useRef(null);\n    const [quality, setQuality] = useState('Waiting for input...');\n    const [isCameraOn, setIsCameraOn] = useState(false);\n\n    const checkFoodQuality = async (imageData) => {\n        try {\n            const response = await fetch('http://localhost:5000/process_frame', {\n                method: 'POST',\n                body: imageData,\n                headers: {\n                    'Content-Type': 'application/octet-stream',\n                },\n            });\n            const data = await response.json();\n            const imgBase64 = data.frame;\n            const qualityText = data.text;\n            setQuality(qualityText);\n            return imgBase64;\n        } catch (error) {\n            console.error('Error connecting to the backend:', error);\n            setQuality('Error');\n        }\n    };\n\n    const startCamera = () => {\n        navigator.mediaDevices.getUserMedia({ video: true })\n            .then((stream) => {\n                videoRef.current.srcObject = stream;\n                videoRef.current.play();\n                setIsCameraOn(true);\n                processVideo(stream);\n            })\n            .catch((error) => {\n                console.error('Error accessing the camera:', error);\n            });\n    };\n\n    const processVideo = (stream) => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        const interval = setInterval(() => {\n            if (isCameraOn) {\n                context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n                canvas.toBlob(async (blob) => {\n                    const imageData = new FormData();\n                    imageData.append('frame', blob);\n                    await checkFoodQuality(imageData);\n                }, 'image/jpeg');\n            } else {\n                clearInterval(interval);\n            }\n        }, 1000 / 24); // 24 FPS\n    };\n\n    const stopCamera = () => {\n        setIsCameraOn(false);\n        const stream = videoRef.current.srcObject;\n        if (stream) {\n            const tracks = stream.getTracks();\n            tracks.forEach(track => track.stop());\n        }\n        videoRef.current.srcObject = null;\n    };\n\n    return (\n        <div>\n            <h1>Smart Quality Vision Testing System</h1>\n            <video ref={videoRef} width=\"640\" height=\"480\" />\n            <div>\n                <button onClick={startCamera}>Start Camera</button>\n                <button onClick={stopCamera}>Stop Camera</button>\n            </div>\n            <p>Food Quality: {quality}</p>\n        </div>\n    );\n};\n\nexport default Camera;","import React from 'react';\n\nconst Settings = () => {\n    return (\n        <div className=\"settings\">\n            <h2>Settings</h2>\n            <label>\n                Camera Resolution:\n                <select>\n                    <option value=\"640x480\">640x480</option>\n                    <option value=\"1280x720\">1280x720</option>\n                    <option value=\"1920x1080\">1920x1080</option>\n                </select>\n            </label>\n            <br />\n            <label>\n                Quality Threshold:\n                <input type=\"number\" min=\"0\" max=\"100\" defaultValue=\"75\" />\n            </label>\n            <br />\n            <button onClick={() => alert('Settings saved!')}>Save Settings</button>\n        </div>\n    );\n};\n\nexport default Settings;","import React from 'react';\nimport Camera from './components/Camera';\nimport Settings from './components/Settings';\nimport './styles.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1>Smart Quality Vision Testing System</h1>\n            <Settings />\n            <Camera />\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}